server:
  port: 8080
spring:

  application:
    name: basic-spring-test

  hikari:
    connectionTimeout: 20000
    maximumPoolSize: 5

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 461882184854-rest77ss2n27pnbbtu2uv1p7602f3th8.apps.googleusercontent.com
            clientSecret: zgqVwrpWAjoG7CMb3SGrZGMu
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              emial
              phone

  app:
    auth:
      tokenSecret:
      tokenExpirationMsec: 864000000

    oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:8080/oauth2/redirect
#        - myandroidapp://oauth2/redirect
#        - myiosapp://oauth2/redirect
